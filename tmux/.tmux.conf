set-option -g default-terminal "tmux-256color" # 基本的にはscreen-256colorかtmux-256colorを設定
set-option -ga terminal-overrides ",$TERM:Tc" # tmuxを起動していない時のzshでの$TERMの値を指定

set -g history-limit 20000

# automatically renumber tmux windows
set -g renumber-windows on

unbind C-b
set -g prefix C-j
bind C-j send-prefix

bind c new-window -c "#{pane_current_path}"
bind C-o choose-window
bind C-n command-prompt -p "New Session:" "new-session -A -s '%%'"

# Activity Monitoring
set -g monitor-activity off
set -g visual-activity off

bind _ killw

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# make delay shorter
set -sg escape-time 0

# tile all windows
unbind =
bind = select-layout tiled

# cycle through panes
# unbind C-a
# unbind o # this is the default key for cycling panes
# bind ^A select-pane -t:.+

# make window/pane index start with 1
set -g base-index 0
setw -g pane-base-index 0

set-option -g set-titles on
set-option -g set-titles-string "#T - #W"
# set-window-option -g automatic-rename on

######################
#### Key Bindings ####
######################

# reload config file
#bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# split window and fix path for tmux 1.9
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# synchronize all panes in a window
bind y setw synchronize-panes

# pane movement shortcuts
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -n M-h select-window -t :-
bind -n M-l select-window -t :+

# Resize pane shortcuts
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# enable mouse support for switching panes/windows
setw -g mouse on

# set vi mode for copy mode
setw -g mode-keys vi
# more settings to make copy-mode more vim-like
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -T copy-mode-vi v send -X begin-selection

if-shell "uname | grep -q Darwin" {
    bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'tmux save-buffer - | pbcopy'; \
    bind C-c run 'tmux save-buffer - | pbcopy'; \
    bind C-v run 'tmux set-buffer "$(pbpaste)"; tmux paste-buffer'
}

if-shell '[[ $(uname -s) = Linux ]]' {
    bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -i -sel clipboard'; \
    bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"; \
    bind C-v run 'tmux set-buffer "$(xclip -o -sel clipboard)"; tmux paste-buffer'
}

set -g @plugin 'sainnhe/tmux-fzf'
bind y run -b tmux-fzf.sh
set -g @fuzzback-bind s
# List of plugins

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'roosta/tmux-fuzzback'
set -g @plugin 'IngoMeyer441/tmux-easy-motion'
set -g @plugin "arcticicestudio/nord-tmux"
set -g @plugin 'haru-ake/tmux-pet'
set -g @plugin 'laktak/extrakto'

set -g @pet-new-pane-key 'C-f'

run '~/.tmux/plugins/tpm/tpm'
